services:

  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  leohoot-frontend:
    image: haidersophie/leohoot
    container_name: leohoot-frontend
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.leohoot-frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.leohoot-frontend.loadbalancer.server.port=80"
  leohoot-db:
    image: mysql
    container_name: leohoot-db
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 5s
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_ROOT_PASSWORD: 'password'
    volumes:
      - leohoot-mysql-data:/var/lib/mysql
  leohoot-backend:
    image: haidersophie/leohoot-backend
    container_name: leohoot-backend
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: 'Production'
    depends_on:
      leohoot-db:
        condition: service_healthy
    links:
      - leohoot-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.leohoot-backend.rule=PathPrefix(`/api`) || PathPrefix(`/hub`)"
      - "traefik.http.services.leohoot-backend.loadbalancer.server.port=8080"

volumes:
  leohoot-mysql-data: